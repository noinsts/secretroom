import os

import discord
from discord.ext import commands
import cfg
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv('TOKEN')
GUILD_ID = cfg.GUILD_ID  # ID —Å–µ—Ä–≤–µ—Ä—É
SOURCE_CHANNEL_ID = cfg.SOURCE_CHANNEL_ID  # –ö–∞–Ω–∞–ª, –∑ —è–∫–æ–≥–æ –ø–µ—Ä–µ–∫–∏–¥–∞—Ç–∏
DESTINATION_CHANNEL_ID = cfg.DESTINATION_CHANNEL_ID  # –ö–∞–Ω–∞–ª, –∫—É–¥–∏ –ø–µ—Ä–µ–∫–∏–¥–∞—Ç–∏
WAITING_CHANNEL_ID = cfg.WAITING_CHANNEL_ID  # –ö–∞–Ω–∞–ª –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
ADMIN_IDS = cfg.ADMIN_IDS  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º—ñ–Ω—ñ–≤
ELITE_ROLE_ID = cfg.ELITE_ROLE_ID  # ID —Ä–æ–ª—ñ "–ï–ª—ñ—Ç"
CHANNEL_1_ID = cfg.CHANNEL_1_ID  # ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É 1
CHANNEL_2_ID = cfg.CHANNEL_2_ID  # ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É 2

intents = discord.Intents.default()
intents.guilds = True
intents.voice_states = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

user_last_channel = {}

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')


@bot.event
async def on_voice_state_update(member, before, after):
    if after.channel and after.channel.id == SOURCE_CHANNEL_ID:
        messages = []
        for admin_id in ADMIN_IDS:
            admin = bot.get_user(admin_id)
            if admin:
                msg = await admin.send(f'–ß–∏ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ {member.display_name}?')
                await msg.add_reaction("‚úÖ")
                await msg.add_reaction("‚ùå")
                messages.append((msg, admin))

        def check(reaction, user):
            return user.id in ADMIN_IDS and str(reaction.emoji) in ["‚úÖ", "‚ùå"]

        try:
            reaction, user = await bot.wait_for("reaction_add", timeout=30.0, check=check)
            if str(reaction.emoji) == "‚úÖ":
                destination = discord.utils.get(member.guild.voice_channels, id=DESTINATION_CHANNEL_ID)
                if destination:
                    await member.move_to(destination)
            elif str(reaction.emoji) == "‚ùå":
                if member.voice and member.voice.channel:
                    await member.move_to(None)  # –ö—ñ–∫–∞—î –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É
        except:
            for msg, admin in messages:
                await admin.send("–ß–∞—Å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∏–Ω—É–≤. –ü–µ—Ä–µ–∫–∏–¥–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")

    if after.channel and after.channel.id == WAITING_CHANNEL_ID:
        for admin_id in ADMIN_IDS:
            admin = bot.get_user(admin_id)
            if admin:
                await admin.send(f'{member.display_name} –∑–∞–π—à–æ–≤ —É –∫–∞–Ω–∞–ª –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è!')


@bot.command()
@commands.has_permissions(administrator=True)
async def eliteup(ctx, member: discord.Member):
    role = discord.utils.get(ctx.guild.roles, id=ELITE_ROLE_ID)
    if role:
        await member.add_roles(role)
        await ctx.send(f'–†–æ–ª—å "–ï–ª—ñ—Ç" –¥–æ–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {member.mention}')
    else:
        await ctx.send('–†–æ–ª—å "–ï–ª—ñ—Ç" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.')


@bot.command()
@commands.has_permissions(administrator=True)
async def elitedown(ctx, member: discord.Member):
    role = discord.utils.get(ctx.guild.roles, id=ELITE_ROLE_ID)
    if role:
        await member.remove_roles(role)
        await ctx.send(f'–†–æ–ª—å "–ï–ª—ñ—Ç" –∑–∞–±—Ä–∞–Ω–æ —É {member.mention}')
    else:
        await ctx.send('–†–æ–ª—å "–ï–ª—ñ—Ç" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.')


@bot.command()
async def connect(ctx):
    if ctx.author.voice and ctx.author.voice.channel:
        channel = ctx.author.voice.channel
        voice_client = discord.utils.get(bot.voice_clients, guild=ctx.guild)

        if voice_client and voice_client.is_connected():
            await voice_client.move_to(channel)
        else:
            await channel.connect()

        await ctx.send(f'–ü—ñ–¥–∫–ª—é—á–∏–≤—Å—è –¥–æ {channel.name}')
    else:
        await ctx.send('–í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ, —â–æ–± –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!')


@bot.command()
async def elitegrade(ctx):
    """–ü–µ—Ä–µ–º—ñ—â—É—î –≤—Å—ñ—Ö –∑ CHANNEL_1 —É CHANNEL_2"""
    guild = bot.get_guild(GUILD_ID)
    channel_1 = guild.get_channel(CHANNEL_1_ID)
    channel_2 = guild.get_channel(CHANNEL_2_ID)

    if channel_1 and channel_2:
        for member in channel_1.members:
            await member.move_to(channel_2)
        await ctx.send("‚úÖ –£—á–∞—Å–Ω–∏–∫–∏ –ø–µ—Ä–µ–º—ñ—â–µ–Ω—ñ —É –∫–∞–Ω–∞–ª 2.")


@bot.command()
async def duograde(ctx):
    """–ü–µ—Ä–µ–º—ñ—â—É—î –≤—Å—ñ—Ö –∑ CHANNEL_2 —É CHANNEL_1"""
    guild = bot.get_guild(GUILD_ID)
    channel_1 = guild.get_channel(CHANNEL_1_ID)
    channel_2 = guild.get_channel(CHANNEL_2_ID)

    if channel_1 and channel_2:
        for member in channel_2.members:
            await member.move_to(channel_1)
        await ctx.send("‚úÖ –£—á–∞—Å–Ω–∏–∫–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω—ñ —É –∫–∞–Ω–∞–ª 1.")


@bot.command()
async def ping(ctx):
    await ctx.send("Pong!")


@bot.command(aliases=["callme"])
async def private(ctx, *usernames):
    """–ü–µ—Ä–µ–º—ñ—â—É—î –≤–∏–∫–ª–∏–∫–∞—á–∞ —ñ –≤–∫–∞–∑–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –≤—ñ–ª—å–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª."""
    guild = bot.get_guild(GUILD_ID)

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ–º–∞–Ω–¥–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞ –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö
    if not guild:
        await ctx.send("‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∞—Ü—é—î –ª–∏—à–µ –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö.")
        return

    caller = guild.get_member(ctx.author.id)

    if not caller or not caller.voice or not caller.voice.channel:
        await ctx.send("‚ùå –¢–∏ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ, —â–æ–± –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –∫–æ–≥–æ—Å—å.")
        return

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ cfg
    name_to_id = {
        "kl": cfg.KLEN_ID,
        "olg": cfg.OLEG_ID,
        "dim": cfg.DIMA_ID,
        "noi": cfg.AND_ID
    }

    target_members = []

    for username in usernames:
        if username.lower() in name_to_id:
            target_id = name_to_id[username.lower()]
            target_member = guild.get_member(target_id)

            if not target_member or not target_member.voice or not target_member.voice.channel:
                await ctx.send(f"‚ùå `{username}` –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ.")
                return

            target_members.append(target_member)
        else:
            await ctx.send(f"‚ùå `{username}` –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫—É.")
            return

    # –û—Ç—Ä–∏–º—É—î–º–æ –∫–∞–Ω–∞–ª duo –∞–±–æ —ñ–Ω—à–∏–π –≤—ñ–ª—å–Ω–∏–π –∫–∞–Ω–∞–ª
    duo_channel = guild.get_channel(CHANNEL_1_ID)
    available_channels = [
        ch for ch in guild.voice_channels if len(ch.members) == 0
    ]

    target_channel = duo_channel if duo_channel and len(duo_channel.members) == 0 else (
        available_channels[0] if available_channels else None)

    if not target_channel:
        await ctx.send("‚ùå –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—ñ–ª—å–Ω–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤.")
        return

    # –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ –≤—Å—ñ—Ö
    await caller.move_to(target_channel)
    for member in target_members:
        await member.move_to(target_channel)

    await ctx.send(f"‚úÖ `{', '.join(usernames)}` –ø–µ—Ä–µ–º—ñ—â–µ–Ω–æ –¥–æ `{target_channel.name}`.")


@bot.command()
async def retu(ctx):
    """–ü–æ–≤–µ—Ä—Ç–∞—î –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–∞–∑–∞–¥ —É —ó—Ö–Ω—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –≥–æ–ª–æ—Å–æ–≤—ñ –∫–∞–Ω–∞–ª–∏"""
    guild = bot.get_guild(GUILD_ID)

    if not guild:
        await ctx.send("‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∞—Ü—é—î –ª–∏—à–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.")
        return

    caller = guild.get_member(ctx.author.id)

    if not caller or not caller.voice or not caller.voice.channel:
        await ctx.send("‚ùå –¢–∏ –º–∞—î—à –±—É—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤—Å—ñ—Ö –Ω–∞–∑–∞–¥.")
        return

    moved_users = [uid for uid, _ in user_last_channel.items() if uid in [m.id for m in caller.voice.channel.members]]

    if not moved_users:
        await ctx.send("‚ùå –ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫–∏—Ö –º–æ–∂–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏.")
        return

    for user_id in moved_users:
        member = guild.get_member(user_id)
        last_channel_id = user_last_channel.get(user_id)

        if member and last_channel_id:
            last_channel = guild.get_channel(last_channel_id)

            if last_channel and isinstance(last_channel, discord.VoiceChannel):
                await member.move_to(last_channel)
                await ctx.send(f"üîÑ {member.display_name} –ø–æ–≤–µ—Ä–Ω—É—Ç–æ –≤ `{last_channel.name}`.")
            else:
                await ctx.send(f"‚ùå –ö–∞–Ω–∞–ª –¥–ª—è {member.display_name} –±—ñ–ª—å—à–µ –Ω–µ —ñ—Å–Ω—É—î.")

            # –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Å, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
            del user_last_channel[user_id]



bot.run(TOKEN)
